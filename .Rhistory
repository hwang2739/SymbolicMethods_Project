}
for (j in 1:3) {
temp <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
if (as.character(group_by_year_range[j,]$Y_range) == "2014-2018") {
temp <- rbind(temp, data.frame("Publication" = group_by_year_range[j,]$Publication,
#"Heading" = as.factor(as.character(group_by_year_range[j,]$Heading))))
"Heading" = group_by_year_range[j,]$Heading))
}
print(temp)
}
rm temp
rm(temp)
for (j in 1:3) {
temp <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
if (as.character(group_by_year_range[j,]$Y_range) == "2014-2018") {
temp <- rbind(temp, data.frame("Publication" = group_by_year_range[j,]$Publication,
#"Heading" = as.factor(as.character(group_by_year_range[j,]$Heading))))
"Heading" = group_by_year_range[j,]$Heading))
}
print(temp)
}
for (i in y) {
print(i)
#period_df <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Terms"))
for (j in 1:length(group_by_year_range$Heading)) {
temp <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
if (as.character(group_by_year_range[j,]$Y_range) == i) {
temp <- rbind(temp, data.frame("Publication" = group_by_year_range[j,]$Publication,
"Heading" = as.character(group_by_year_range[j,]$Heading)))
}
}
print(temp)
#r=paste0(period_df$Terms, collapse=",")
#r_factor<-as.factor(r)
#period_df <- rbind(period_df, data.frame("Publication" = , "Terms" = r_factor))
}
print("yes", 1)
print("yes", "n")
for (i in y) {
#period_df <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Terms"))
for (j in 1:length(group_by_year_range$Heading)) {
print(i)
print(j)
print(as.character(group_by_year_range[j,]$Y_range) == i)
temp <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
if (as.character(group_by_year_range[j,]$Y_range) == i) {
temp <- rbind(temp, data.frame("Publication" = group_by_year_range[j,]$Publication,
"Heading" = as.character(group_by_year_range[j,]$Heading)))
}
}
print(temp)
#r=paste0(period_df$Terms, collapse=",")
#r_factor<-as.factor(r)
#period_df <- rbind(period_df, data.frame("Publication" = , "Terms" = r_factor))
}
for (j in 1:3) {
temp <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
if (as.character(group_by_year_range[j,]$Y_range) == "2014-2018") {
temp <- rbind(temp, data.frame("Publication" = group_by_year_range[j,]$Publication,
#"Heading" = as.factor(as.character(group_by_year_range[j,]$Heading))))
"Heading" = group_by_year_range[j,]$Heading))
}
print(temp)
}
for (i in y) {
#period_df <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Terms"))
for (j in 1:length(group_by_year_range$Heading)) {
temp <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
if (as.character(group_by_year_range[j,]$Y_range) == i) {
temp <- rbind(temp, data.frame("Publication" = group_by_year_range[j,]$Publication,
"Heading" = group_by_year_range[j,]$Heading))
}
}
print(temp)
rm(temp)
#r=paste0(period_df$Terms, collapse=",")
#r_factor<-as.factor(r)
#period_df <- rbind(period_df, data.frame("Publication" = , "Terms" = r_factor))
}
for (i in y) {
#period_df <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Terms"))
temp <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
for (j in 1:length(group_by_year_range$Heading)) {
if (as.character(group_by_year_range[j,]$Y_range) == i) {
temp <- rbind(temp, data.frame("Publication" = group_by_year_range[j,]$Publication,
"Heading" = group_by_year_range[j,]$Heading))
}
}
print(temp)
rm(temp)
#r=paste0(period_df$Terms, collapse=",")
#r_factor<-as.factor(r)
#period_df <- rbind(period_df, data.frame("Publication" = , "Terms" = r_factor))
}
for (i in y) {
#period_df <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Terms"))
temp <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
for (j in 1:length(group_by_year_range$Heading)) {
if (as.character(group_by_year_range[j,]$Y_range) == i) {
temp <- rbind(temp, data.frame("Publication" = group_by_year_range[j,]$Publication,
"Heading" = group_by_year_range[j,]$Heading))
}
}
print(i)
print(temp)
#r=paste0(period_df$Terms, collapse=",")
#r_factor<-as.factor(r)
#period_df <- rbind(period_df, data.frame("Publication" = , "Terms" = r_factor))
}
temp
length(temp)
length(temp[1,])
length(temp[,1])
length(temp$Heading)
for (i in y) {
period_df <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Index", "Terms"))
temp <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
for (j in 1:length(group_by_year_range$Heading)) {
if (as.character(group_by_year_range[j,]$Y_range) == i) {
temp <- rbind(temp, data.frame("Publication" = group_by_year_range[j,]$Publication,
"Heading" = group_by_year_range[j,]$Heading))
}
}
# print(i)
# print(temp)
by_publication <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
pub <- unique(temp$Publication)
for (k in 1:length(temp$Heading)) {
if (temp[k,]$Publication == k) {
by_publication <- rbind(by_publication, data.frame("Publication" = temp[k,]$Publication,
"Heading" = temp[k,]$Heading))
}
}
print(by_publication)
}
temp$Publication
for (i in y) {
period_df <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Index", "Terms"))
temp <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
for (j in 1:length(group_by_year_range$Heading)) {
if (as.character(group_by_year_range[j,]$Y_range) == i) {
temp <- rbind(temp, data.frame("Publication" = group_by_year_range[j,]$Publication,
"Heading" = group_by_year_range[j,]$Heading))
}
}
# print(i)
# print(temp)
by_publication <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
pub <- unique(temp$Publication)
for (k in temp$Publication) {
if (temp[k,]$Publication == k) {
by_publication <- rbind(by_publication, data.frame("Publication" = temp[k,]$Publication,
"Heading" = temp[k,]$Heading))
}
}
print(by_publication)
}
temp
pub <- unique(temp$Publication)
pub
for (k in pub) {
by_publication <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
for (h in 1:length(temp$Publication)) {
if (temp[h,]$Publication == k) {
by_publication <- rbind(by_publication, data.frame("Publication" = temp[k,]$Publication,
"Heading" = temp[k,]$Heading))
}
}
print(by_publication)
}
length(temp$Publication)
temp[1,]$Publication
temp[1,]$Publication
temp[1,]$Heading
pub <- unique(temp$Publication)
for (k in pub) {
by_publication <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
for (h in 1:length(temp$Publication)) {
if (temp[h,]$Publication == k) {
by_publication <- rbind(by_publication, data.frame("Publication" = temp[k,]$Publication,
"Heading" = temp[k,]$Heading))
}
print(by_publication)
}
#print(by_publication)
}
pub <- unique(temp$Publication)
for (k in pub) {
by_publication <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
for (h in 1:length(temp$Publication)) {
if (temp[h,]$Publication == k) {
by_publication <- rbind(by_publication, data.frame("Publication" = temp[h,]$Publication,
"Heading" = temp[h,]$Heading))
}
#print(by_publication)
}
print(by_publication)
}
by_publication
pub <- unique(temp$Publication)
for (k in pub) {
by_publication <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
for (h in 1:length(temp$Publication)) {
if (temp[h,]$Publication == k) {
by_publication <- rbind(by_publication, data.frame("Publication" = temp[h,]$Publication,
"Heading" = temp[h,]$Heading))
}
}
#print(by_publication)
df_by_pub <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Terms"))
r=paste0(by_publication$Heading, collapse=",")
r_factor<-as.factor(r)
df_by_pub <- rbind(df_by_pub, data.frame("Publication" = k, "Terms" = r_factor))
}
print(df_by_pub)
# build data frame; list of MeSH terms per period
y<- unique(group_by_year_range$Y_range)
y
for (i in y) {
period_df <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Index", "Terms"))
temp <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
for (j in 1:length(group_by_year_range$Heading)) {
if (as.character(group_by_year_range[j,]$Y_range) == i) {
temp <- rbind(temp, data.frame("Publication" = group_by_year_range[j,]$Publication,
"Heading" = group_by_year_range[j,]$Heading))
}
}
print(i)
# print(temp)
pub <- unique(temp$Publication)
for (k in pub) {
by_publication <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
for (h in 1:length(temp$Publication)) {
if (temp[h,]$Publication == k) {
by_publication <- rbind(by_publication, data.frame("Publication" = temp[h,]$Publication,
"Heading" = temp[h,]$Heading))
}
}
#print(by_publication)
df_by_pub <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Terms"))
r=paste0(by_publication$Heading, collapse=",")
r_factor<-as.factor(r)
df_by_pub <- rbind(df_by_pub, data.frame("Publication" = k, "Terms" = r_factor))
}
print(df_by_pub)
}
View(temp)
View(temp)
for (i in y) {
period_df <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Index", "Terms"))
temp <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
for (j in 1:length(group_by_year_range$Heading)) {
if (as.character(group_by_year_range[j,]$Y_range) == i) {
temp <- rbind(temp, data.frame("Publication" = group_by_year_range[j,]$Publication,
"Heading" = group_by_year_range[j,]$Heading))
}
}
print(i)
# print(temp)
pub <- unique(temp$Publication)
for (k in pub) {
by_publication <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
for (h in 1:length(temp$Publication)) {
if (temp[h,]$Publication == k) {
by_publication <- rbind(by_publication, data.frame("Publication" = temp[h,]$Publication,
"Heading" = temp[h,]$Heading))
}
}
print(by_publication)
df_by_pub <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Terms"))
r=paste0(by_publication$Heading, collapse=",")
r_factor<-as.factor(r)
df_by_pub <- rbind(df_by_pub, data.frame("Publication" = k, "Terms" = r_factor))
}
}
for (i in y) {
period_df <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Index", "Terms"))
temp <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
for (j in 1:length(group_by_year_range$Heading)) {
if (as.character(group_by_year_range[j,]$Y_range) == i) {
temp <- rbind(temp, data.frame("Publication" = group_by_year_range[j,]$Publication,
"Heading" = group_by_year_range[j,]$Heading))
}
}
print(i)
# print(temp)
pub <- unique(temp$Publication)
for (k in pub) {
by_publication <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
for (h in 1:length(temp$Publication)) {
if (temp[h,]$Publication == k) {
by_publication <- rbind(by_publication, data.frame("Publication" = temp[h,]$Publication,
"Heading" = temp[h,]$Heading))
}
}
print(by_publication)
df_by_pub <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Terms"))
r=paste0(by_publication$Heading, collapse=",")
r_factor<-as.factor(r)
df_by_pub <- rbind(df_by_pub, data.frame("Publication" = k, "Terms" = r_factor))
}
}
for (i in y) {
period_df <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Index", "Terms"))
temp <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
for (j in 1:length(group_by_year_range$Heading)) {
if (as.character(group_by_year_range[j,]$Y_range) == i) {
temp <- rbind(temp, data.frame("Publication" = group_by_year_range[j,]$Publication,
"Heading" = group_by_year_range[j,]$Heading))
}
}
print(i)
# print(temp)
pub <- unique(temp$Publication)
df_by_pub <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Terms"))
for (k in pub) {
by_publication <- setNames(data.frame(matrix(ncol = 2, nrow = 0)), c("Publication", "Heading"))
for (h in 1:length(temp$Publication)) {
if (temp[h,]$Publication == k) {
by_publication <- rbind(by_publication, data.frame("Publication" = temp[h,]$Publication,
"Heading" = temp[h,]$Heading))
}
}
#print(by_publication)
r=paste0(by_publication$Heading, collapse=",")
r_factor<-as.factor(r)
df_by_pub <- rbind(df_by_pub, data.frame("Publication" = k, "Terms" = r_factor))
}
print(df_by_pub)
}
View(df_by_pub)
View(completed_df)
# build data frame for all MeSH terms extracted (for later matching)
meshTermList<-as.list(df_by_pub["Terms"])
meshTermList
#meshTermList
s <- strsplit(as.character(meshTermList$Terms), ',')
AllTerms<-data.frame(AllMeshTerms=unlist(s))
AllTerms
library(textmineR)
View(df_by_pub)
dtm <- CreateDtm(doc_vec = df_by_pub$Terms,
doc_names = df_by_pub$Publication,
ngram_window = c(1,3),
stopword_vec = c(stopwords::stopwords("en"),
stopwords::stopwords(source = "smart")),
lower = TRUE,
#remove_punctuation = TRUE,
remove_numbers = TRUE,
verbose = TRUE )
# sparse matrix, select for MeSH terms that occur at least once
dtm
dtm <- dtm[,colSums(dtm) >= 1]
set.seed(12345)
model <- FitLdaModel(dtm = dtm,
k = 20,
iterations = 500,
burnin = 50,
alpha = 0.1,
beta = 0.05,
optimize_alpha = TRUE,
calc_likelihood = TRUE,
calc_coherence = TRUE,
calc_r2 = TRUE)
# Get the top terms of each topic
model$top_terms <- GetTopTerms(phi = model$phi, M = 5)
model$prevalence <- colSums(model$theta) / sum(model$theta) * 100
# textmineR has a naive topic labeling tool based on probable bigrams
model$labels <- LabelTopics(assignments = model$theta > 0.05,
dtm = dtm,
M = 1)
# put them together, with coherence into a summary table
model$summary <- data.frame(topic = rownames(model$phi),
label = model$labels,
coherence = round(model$coherence, 3),
prevalence = round(model$prevalence,3),
top_terms = apply(model$top_terms, 2, function(x){
paste(x, collapse = ", ")
}),
stringsAsFactors = FALSE)
model$summary[order(model$summary$prevalence, decreasing = TRUE) , ][ 1:10 , ]
model$labels
# Using '_' terms
df_tt=as.data.frame(model$summary$top_terms)
df_topic=as.data.frame(df_tt[1:10,])
colnames(df_topic)[1]<-c("Terms")
df_topic
##This function is used to find only bigrams and trigrams in topics term list
my_funct<-function(x){
x=as.character(unlist(x))
word_list=as.list(strsplit(x,","))[[1]]
u_list=grep('_', word_list, value=TRUE)
}
out=apply(df_topic,1,my_funct )
#'out' is our final LDA output term list.
out
## If there are no bi- or tri-grams in the topic terms, then use the topic-label as the term
for (i in 1:length(out)) {
if (as.character(out[i])=="character(0)") {
out[i]=model$labels[i]
}
}
out
## back reference
wf<-as.list(AllTerms$AllMeshTerms)
unique_wf<-unique(as.list(wf))
# Fuzzy string matching
out_list<-list()
for (i in 1:10) {
for (j in 1:length(out[[i]])) {
if (!is.null(out[[i]][j])) {
#print(out[[i]][j])
for (k in 1:length(unique_wf)) {
a_match<-agrep(out[[i]][j], unique_wf[[k]][1], max = 3, value = TRUE,ignore.case = TRUE)
#print(a_match)
if (!is.null(a_match)) {
out_list<-append(out_list,a_match)
}
}
}
}
}
##List of matched terms
out_list
##Removing duplicates
unique_terms=unique(out_list)
unique_terms
# build data frame for all MeSH terms extracted (for later matching)
meshTermList<-as.list(df_by_pub["Terms"])
s <- strsplit(as.character(meshTermList$Terms), ',')
AllTerms<-data.frame(AllMeshTerms=unlist(s))
dtm <- CreateDtm(doc_vec = df_by_pub$Terms,
doc_names = df_by_pub$Publication,
ngram_window = c(1,3),
stopword_vec = c(stopwords::stopwords("en"),
stopwords::stopwords(source = "smart")),
lower = TRUE,
#remove_punctuation = TRUE,
remove_numbers = TRUE,
verbose = TRUE )
# sparse matrix, select for MeSH terms that occur at least once
dtm <- dtm[,colSums(dtm) >= 1]
set.seed(12345)
model <- FitLdaModel(dtm = dtm,
k = 20,
iterations = 500,
burnin = 50,
alpha = 0.1,
beta = 0.05,
optimize_alpha = TRUE,
calc_likelihood = TRUE,
calc_coherence = TRUE,
calc_r2 = TRUE)
# Get the top terms of each topic
model$top_terms <- GetTopTerms(phi = model$phi, M = 5)
model$prevalence <- colSums(model$theta) / sum(model$theta) * 100
# textmineR has a naive topic labeling tool based on probable bigrams
model$labels <- LabelTopics(assignments = model$theta > 0.05,
dtm = dtm,
M = 1)
# put them together, with coherence into a summary table
model$summary <- data.frame(topic = rownames(model$phi),
label = model$labels,
coherence = round(model$coherence, 3),
prevalence = round(model$prevalence,3),
top_terms = apply(model$top_terms, 2, function(x){
paste(x, collapse = ", ")
}),
stringsAsFactors = FALSE)
model$summary[order(model$summary$prevalence, decreasing = TRUE) , ][ 1:10 , ]
#model$summary[order(model$summary$prevalence, decreasing = TRUE) , ][ 1:10 , ]
model$labels
# Using '_' terms
df_tt=as.data.frame(model$summary$top_terms)
df_topic=as.data.frame(df_tt[1:10,])
colnames(df_topic)[1]<-c("Terms")
##This function is used to find only bigrams and trigrams in topics term list
my_funct<-function(x){
x=as.character(unlist(x))
word_list=as.list(strsplit(x,","))[[1]]
u_list=grep('_', word_list, value=TRUE)
}
out=apply(df_topic,1,my_funct )
out
## If there are no bi- or tri-grams in the topic terms, then use the topic-label as the term
for (i in 1:length(out)) {
if (as.character(out[i])=="character(0)") {
out[i]=model$labels[i]
}
}
out
## back reference
wf<-as.list(AllTerms$AllMeshTerms)
unique_wf<-unique(as.list(wf))
# Fuzzy string matching
out_list<-list()
for (i in 1:10) {
for (j in 1:length(out[[i]])) {
if (!is.null(out[[i]][j])) {
#print(out[[i]][j])
for (k in 1:length(unique_wf)) {
a_match<-agrep(out[[i]][j], unique_wf[[k]][1], max = 3, value = TRUE,ignore.case = TRUE)
#print(a_match)
if (!is.null(a_match)) {
out_list<-append(out_list,a_match)
}
}
}
}
}
##List of matched terms
out_list
